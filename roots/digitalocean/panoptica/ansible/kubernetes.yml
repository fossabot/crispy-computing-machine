---
- hosts: all
  become: yes
  tasks:
   - name: create Docker config directory
     file: path=/etc/docker state=directory
     tags:
       - build

   - name: changing Docker to systemd driver
     copy:
      dest: "/etc/docker/daemon.json"
      content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"]
        }
     tags:
       - build

   - name: install Docker
     apt:
       name: docker.io
       state: present
       update_cache: true
     tags:
       - build

   - name: install APT Transport HTTPS
     apt:
       name: apt-transport-https
       state: present
     tags:
       - build

   - name: add Kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present
     tags:
       - build

   - name: add Kubernetes' APT repository
     apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'
     tags:
       - build

   - name: install kubelet
     apt:
       name: kubelet=1.22.4-00
       state: present
       update_cache: true
     tags:
       - build

   - name: install kubeadm
     apt:
       name: kubeadm=1.22.4-00
       state: present
     tags:
       - build

- hosts: control_plane
  become: yes
  tasks:
   - name: install kubectl
     apt:
       name: kubectl=1.22.4-00
       state: present
       force: yes
     tags:
       - build

- hosts: control_plane
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt
      tags:
        - build

    - name: create .kube directory
      become: yes
      become_user: ubuntu
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755
      tags:
        - build

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
        mode: 0400
      tags:
        - build

    - name: install Pod network
      become: yes
      become_user: ubuntu
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt
      tags:
        - build

- hosts: control_plane
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw
      tags:
        - build

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"
      tags:
        - build


- hosts: workers
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['controller.do.iot4.net'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt
      tags:
        - build
